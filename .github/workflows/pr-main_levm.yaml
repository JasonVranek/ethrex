name: LEVM

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
    paths:
      - "crates/vm/levm/**"
      - ".github/workflows/pr-main_levm.yaml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  pull-requests: write

jobs:
  ef-test:
    if: ${{ github.event_name != 'merge_group' }}
    name: EF Tests Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable

      - name: Caching
        uses: Swatinem/rust-cache@v2

      - name: Download EF Tests
        run: |
          cd crates/vm/levm
          make download-evm-ef-tests

      - name: Run tests
        run: |
          cd crates/vm/levm
          set -o pipefail
          make run-evm-ef-tests-ci | tee test_result_pr.txt

      - name: Show test summary -- full
        run: |
          cd crates/vm/levm && awk '/Summary: /,0' test_result_pr.txt

      - name: Show test summary -- short
        run: |
          bash .github/scripts/parse_test_result.sh crates/vm/levm/test_result_pr.txt | tee crates/vm/levm/test_result_pr_short.txt
          echo "PR's test results:"
          cat crates/vm/levm/test_result_pr_short.txt

      - name: Upload PR branch EF-test results.
        uses: actions/upload-artifact@v4
        with:
          name: pr-ef-test-data
          path: crates/vm/levm/test_result_pr_short.txt

      - name: Check EF-TESTS status is 100%
        run: |
          cd crates/vm/levm
          if [ "$(awk '/Summary:/ {print $(NF)}' test_result_pr_short.txt)" != "(100.00%)" ]; then
              echo "Percentage is not 100%."
              grep -v '(100%)' crates/vm/levm/test_result_pr_short.txt
              exit 1
          fi

  ef-test-main:
    if: ${{ github.event_name != 'merge_group' }}
    name: EF Tests Check main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable

      - name: Caching
        uses: Swatinem/rust-cache@v2

      - name: Download EF Tests
        run: |
          cd crates/vm/levm
          make download-evm-ef-tests

      - name: Run tests
        run: |
          cd crates/vm/levm
          set -o pipefail
          make run-evm-ef-tests-ci | tee test_result_main.txt

      - name: Show test summary -- full
        run: |
          cd crates/vm/levm && awk '/Summary: /,0' test_result_main.txt

      - name: Show test summary -- short
        run: |
          bash .github/scripts/parse_test_result.sh crates/vm/levm/test_result_main.txt | tee crates/vm/levm/test_result_main_short.txt
          echo "Main's test results:"
          cat crates/vm/levm/test_result_main_short.txt

      - name: Upload main branch EF-test results.
        uses: actions/upload-artifact@v4
        with:
          name: main-ef-test-data
          path: crates/vm/levm/test_result_main_short.txt

      # This is for ensuring test from merge to Prague are passing.
      # After adding the Legacy Test suite, not all are passing.
      # This is a temporary solution until we fix the legacy tests.
      - name: Check EF-TESTS from Paris to Prague is 100%
        run: |
          cd crates/vm/levm
          awk '/Prague:/, /Paris:/ {print $1, $3}' test_result_main.txt | sed 's/[()]//g' | grep -v '100.00%' && echo "All percentage are not 100%." && exit 1 || echo "All percentage are 100%."

      - name: Check EF-TESTS status is 100%
        run: |
          cd crates/vm/levm
          if [ "$(awk '/Summary:/ {print $(NF)}' test_result_main_short.txt)" != "(100.00%)" ]; then
              echo "Percentage is not 100%."
              grep -v '(100%)' crates/vm/levm/test_result_pr_short.txt
              exit 1
          fi

  # The purpose of this job is to add it as a required check in GitHub so that we don't have to add every individual job as a required check
  all-tests:
    #Â "Integration Test" is a required check, don't change the name
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [ef-test]
    # Make sure this job runs even if the previous jobs failed or were skipped
    if: ${{ always() && needs.ef-test.result != 'skipped' }}
    steps:
      - name: Check if any job failed
        run: |
          if [ "${{ needs.ef-test.result }}" != "success" ]; then
            echo "Job EF Tests Check failed"
            exit 1
          fi

  test:
    # "Test" is a required check, don't change the name
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable

      - name: Caching
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: |
          cd crates/vm/levm
          make test
  bench:
    name: Benchmarks (LEVM vs REVM)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Install hyperfine
        uses: taiki-e/install-action@v2
        with:
          tool: hyperfine@1.16

      - name: Install solc
        uses: pontem-network/get-solc@master
        with:
          version: v0.8.29

      - name: Run benchmarks
        run: |
          cd crates/vm/levm
          make revm-comparison
