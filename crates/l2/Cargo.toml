[package]
name = "ethereum_rust-l2"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
reqwest = { version = "0.12.7", features = ["json"] }
tokio.workspace = true
tokio-util.workspace = true
tracing.workspace = true
serde.workspace = true
serde_json.workspace = true
ethereum-types.workspace = true
ethereum_rust-rpc.workspace = true
ethereum_rust-storage.workspace = true
#ethereum_rust-rlp.workspace = true
# TODO We need the patches/patch_001_mdbx branch, check how to reference the repo directly (merge the branch?).
# Using this branch to have De/Serialization for the Block type.
# ethereum_rust
ethereum_rust-core = { git = "https://github.com/lambdaclass/ethereum_rust", package = "ethereum_rust-core", branch = "patches/patch_001_mdbx", default-features = false, features = [
    "no_libmdbx",
] }
ethereum_rust-rlp = { git = "https://github.com/lambdaclass/ethereum_rust", package = "ethereum_rust-rlp", branch = "patches/patch_001_mdbx", default-features = false }
hex.workspace = true
bytes.workspace = true
jsonwebtoken.workspace = true
sp1-sdk = "2.0.0"

prover-lib = { path = "./prover/sp1/lib" }

# revm
revm = { version = "14.0.3", features = [
    "std",
    "serde",
    "kzg-rs",
], default-features = false }

[lib]
path = "./l2.rs"
