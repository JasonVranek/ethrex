- name: Metrics Setup
  hosts: metrics

  vars:
    ethrex_dir: "/home/{{ ansible_user }}/ethrex"
    grafana_providers:
      - name: l1_dashboards
        path: /home/admin/ethrex/crates/blockchain/metrics/provisioning/grafana_provisioning/dashboards/
      - name: l2_dashboards
        path: /home/admin/ethrex/crates/blockchain/metrics/provisioning/grafana_provisioning/dashboards/l2_dashboards/

  tasks:
    - name: Enable SSH agent forwarding
      become: true
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?AllowAgentForwarding.*'
        line: 'AllowAgentForwarding yes'
        state: present
      
    - name: Restart SSH service
      become: true
      systemd:
        name: sshd
        state: restarted

    - name: Reset connection
      meta: reset_connection

    - name: Clone monitoring stack repository
      git:
        repo: "git@github.com:lambdaclass/monitoring-stack.git"
        dest: /home/{{ ansible_user}}/monitoring-stack
        version: main
        accept_hostkey: true

    - name: Add localhost as known hosts
      shell: ssh-keyscan localhost >> /home/{{ ansible_user }}/.ssh/known_hosts

    - name: Install ansible on server
      become: true
      apt:
        name: ansible
        state: present

    - name: Check if Grafana is installed
      stat:
        path: /usr/sbin/grafana-server
      register: grafana

    - name: Run monitoring stack deployment
      make:
        chdir: /home/{{ ansible_user }}/monitoring-stack
        target: all
        params:
          GRAFANA_PASSWORD: lambda
          TARGET: localhost
      when: not grafana.stat.exists

    - name: Remove ProtectHome=true from grafana-server.service
      become: true
      lineinfile:
        path: /lib/systemd/system/grafana-server.service
        regexp: '^\s*ProtectHome\s*=\s*true\s*$'
        state: absent

    - name: Check if uid exists in Prometheus datasource
      lineinfile:
        path: /etc/grafana/provisioning/datasources/prometheus.yaml
        regexp: '^\s*uid:\s*prom-001\s*$'
        state: absent
      check_mode: yes
      register: uid_check
      changed_when: false

    - name: Add UID below type in Prometheus datasource
      become: true
      lineinfile:
        path: /etc/grafana/provisioning/datasources/prometheus.yaml
        regexp: '^(\s*)type:\s*prometheus\s*$'
        line: '\1type: prometheus\n\1uid: prom-001'
        backrefs: yes
      when: uid_check.found == 0

    - name: Update grafana provisioning for dashboards
      become: true
      template:
        src: templates/config/dashboards.yml.j2
        dest: /etc/grafana/provisioning/dashboards/dashboards.yml
        owner: grafana
        group: grafana
        mode: '0644'

    - name: Restart Grafana
      become: true
      systemd:
        name: grafana-server
        state: restarted
        daemon_reload: true

    - name: Remove monitoring stack repo
      file:
        path: /home/{{ ansible_user }}/monitoring-stack
        state: absent
